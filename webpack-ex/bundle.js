!function(r){var n={};function e(t){if(n[t])return n[t].exports;var i=n[t]={i:t,l:!1,exports:{}};return r[t].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=r,e.c=n,e.d=function(r,n,t){e.o(r,n)||Object.defineProperty(r,n,{configurable:!1,enumerable:!0,get:t})},e.r=function(r){Object.defineProperty(r,"__esModule",{value:!0})},e.n=function(r){var n=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(n,"a",n),n},e.o=function(r,n){return Object.prototype.hasOwnProperty.call(r,n)},e.p="",e(e.s="./src/js/index.js")}({"./src/css/style.css":
/*!***************************!*\
  !*** ./src/css/style.css ***!
  \***************************/
/*! no static exports found */function(module,exports){eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/style.css?")},"./src/js/ane.js":
/*!***********************!*\
  !*** ./src/js/ane.js ***!
  \***********************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("// 海葵类\r\n\r\n// 依赖 global\r\nconst global = __webpack_require__(/*! ./global */ \"./src/js/global.js\");\r\nvar ctx2 = global.ctx2;\r\nvar canHei = global.canHei;\r\n\r\nvar Ane = function(){\r\n  this.num = 50;\r\n  //start point, controll point , end point\r\n  this.rootx = [];\r\n  this.headx = [];\r\n  this.heady = [];\r\n  this.amp = [];   //振幅\r\n  this.beta = 0;    //sin的角度\r\n};\r\nAne.prototype.init = function(){\r\n  for (var i = 0; i< this.num; i++){\r\n    this.rootx[i] = i * 18 + Math.random() * 30;\r\n    this.headx[i] = this.rootx[i];\r\n    this.heady[i] = (canHei - 220) + Math.random() * 50;\r\n    this.amp[i] = Math.random() * 50 + 60;\r\n  }\r\n};\r\nAne.prototype.drawAne = function(){\r\n  this.beta += global.diffframetime * 0.0008;\r\n  var l = Math.sin(this.beta);\r\n\r\n  ctx2.save();\r\n  ctx2.globalAlpha = 0.7;\r\n  ctx2.lineWidth = 20;\r\n  ctx2.lineCap = 'round';\r\n  ctx2.strokeStyle = '#3b154e';\r\n  for(var i = 0; i< this.num; i++){\r\n    //beginPath, moveTo,lineTo,lineWidth, strokeStyle, lineCap, stroke;\r\n    var endx = this.headx[i] + l * this.amp[i];\r\n    ctx2.beginPath();\r\n    ctx2.moveTo(this.rootx[i], canHei);     //起始点\r\n    ctx2.quadraticCurveTo(this.rootx[i], canHei - 100, endx, this.heady[i]);  //控制点  和  结束点的x，y\r\n    ctx2.stroke();\r\n  }\r\n  ctx2.restore();\r\n};\r\n\r\nmodule.exports = Ane;\n\n//# sourceURL=webpack:///./src/js/ane.js?")},"./src/js/baby.js":
/*!************************!*\
  !*** ./src/js/baby.js ***!
  \************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("// 小鱼类\r\n\r\n// 依赖 global, util\r\nconst global = __webpack_require__(/*! ./global */ \"./src/js/global.js\");\r\nconst util = __webpack_require__(/*! ./util */ \"./src/js/util.js\");\r\n\r\nvar imgUrl = global.imgUrl;\r\nvar ctx1 = global.ctx1;\r\nvar can1 = global.can1;\r\nvar canWid = global.canWid;\r\nvar canHei = global.canHei;\r\nvar lerpAngle = util.lerpAngle;\r\nvar lerpDistance = util.lerpDistance;\r\n\r\nvar Baby = function(){\r\n  this.x = 0;\r\n  this.y = 0;\r\n  this.angle;     //大鱼的角度\r\n  this.babyTailArr = [];    //尾巴图片数组\r\n  this.babyTailTimer = 0;  //计数器\r\n  this.babyTailIndex = 0;  //尾巴图片数组的下标\r\n\r\n  this.babyEyeArr = [];\r\n  this.babyEyeTimer = 0;\r\n  this.babyEyeIndex = 0;\r\n  this.babyEyeInterval = 1000;  //初始间隔时间为1秒\r\n\r\n  this.babyBodyArr = [];\r\n  this.babyBodyTimer = 0;\r\n  this.babyBodyIndex = 0;\r\n};\r\nBaby.prototype.init = function(){\r\n  this.x = canWid * 0.5 -50;\r\n  this.y = canHei * 0.5 + 50;\r\n  this.babyBodyIndex = 0;\r\n  this.angle = 0;\r\n  for(var i = 0;i < 8;i++){    //初始化小鱼的尾巴图片数组\r\n    this.babyTailArr[i] = new Image();\r\n    this.babyTailArr[i].src = imgUrl + 'babyTail'+ i +'.png';\r\n  }\r\n  for(var i = 0;i < 2;i++){   //初始化小鱼的眼睛图片数组\r\n    this.babyEyeArr[i] = new Image();\r\n    this.babyEyeArr[i].src = imgUrl + 'babyEye'+ i +'.png';\r\n  }\r\n  for(var i = 0;i < 20;i++){   //初始化小鱼的身体图片数组\r\n    this.babyBodyArr[i] = new Image();\r\n    this.babyBodyArr[i].src = imgUrl + 'babyFade'+ i +'.png';\r\n  }\r\n};\r\nBaby.prototype.drawBaby = function(){\r\n  //lerp x , y   让小鱼坐标倾向于大鱼坐标。\r\n  var momOb = global.momOb;\r\n  var scoreOb = global.scoreOb;\r\n\r\n  this.x = lerpDistance(momOb.x, this.x, 0.98);\r\n  this.y = lerpDistance(momOb.y, this.y, 0.99);\r\n\r\n  //lerpangle， 让小鱼的角度倾向于大鱼的角度，   然后绘制小鱼\r\n  var deltaX = momOb.x - this.x;\r\n  var deltaY = momOb.y - this.y;\r\n  var beta = Math.atan2(deltaY, deltaX) + Math.PI;\r\n  this.angle = lerpAngle(beta, this.angle, 0.6);    //获得每一次倾向于大鱼旋转的角度\r\n\r\n  this.babyTailTimer += global.diffframetime;\r\n  if(this.babyTailTimer > 50){\r\n    this.babyTailIndex = (this.babyTailIndex + 1) % 8;   //获得尾巴图片数组下标\r\n    this.babyTailTimer %= 50;\r\n  }\r\n\r\n  this.babyEyeTimer += global.diffframetime;\r\n  if(this.babyEyeTimer > this.babyEyeInterval){   //如果计数器大于时间间隔,数组下标加1\r\n    this.babyEyeIndex = (this.babyEyeIndex + 1) % 2;\r\n    this.babyEyeTimer %= this.babyEyeInterval;\r\n\r\n    if(this.babyEyeIndex == 0){       //如果下一帧是闭眼睛状态，时间间隔为2－3秒\r\n      this.babyEyeInterval = Math.random() * 1500 + 1500;\r\n    }else{\r\n      this.babyEyeInterval = 200;\r\n    }\r\n  }\r\n\r\n  this.babyBodyTimer += global.diffframetime;\r\n  if(this.babyBodyTimer > 550){\r\n    this.babyBodyIndex += 1;\r\n    this.babyBodyTimer %= 550;\r\n    scoreOb.strength = ((20 - this.babyBodyIndex)/2).toFixed(0);\r\n\r\n    if(this.babyBodyIndex > 19){   //如果身体变成白色，game over；\r\n      this.babyBodyIndex = 19;\r\n      scoreOb.gameOver = true;\r\n      can1.style.cursor = \"pointer\";\r\n    }\r\n  }\r\n\r\n  ctx1.save();     //保存之前的画布\r\n  ctx1.translate(this.x, this.y);\r\n  ctx1.rotate(this.angle);\r\n\r\n  var babyTailImage = this.babyTailArr[this.babyTailIndex];\r\n  ctx1.drawImage(babyTailImage, -babyTailImage.width * 0.5 + 24, -babyTailImage.height * 0.5);\r\n\r\n  var babyBodyImage = this.babyBodyArr[this.babyBodyIndex];\r\n  ctx1.drawImage(babyBodyImage, -babyBodyImage.width * 0.5, -babyBodyImage.height * 0.5);\r\n\r\n  var babyEyeImage = this.babyEyeArr[this.babyEyeIndex];\r\n  ctx1.drawImage(babyEyeImage, -babyEyeImage.width * 0.5, -babyEyeImage.height * 0.5);\r\n\r\n  ctx1.restore();   //操作完后返回到之前的画布\r\n};\r\n\r\nmodule.exports = Baby;\n\n//# sourceURL=webpack:///./src/js/baby.js?")},"./src/js/controller.js":
/*!******************************!*\
  !*** ./src/js/controller.js ***!
  \******************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('// 全局函数、初始化、判断等\r\n\r\n// 依赖 global, util, ane, baby, dust, fruit, halo, mom, score, wave\r\nconst global = __webpack_require__(/*! ./global */ "./src/js/global.js");\r\nconst util = __webpack_require__(/*! ./util */ "./src/js/util.js");\r\nconst Ane = __webpack_require__(/*! ./ane */ "./src/js/ane.js");\r\nconst Baby = __webpack_require__(/*! ./baby */ "./src/js/baby.js");\r\nconst Dust = __webpack_require__(/*! ./dust */ "./src/js/dust.js");\r\nconst Fruit = __webpack_require__(/*! ./fruit */ "./src/js/fruit.js");\r\nconst Halo = __webpack_require__(/*! ./halo */ "./src/js/halo.js");\r\nconst Mom = __webpack_require__(/*! ./mom */ "./src/js/mom.js");\r\nconst Score = __webpack_require__(/*! ./score */ "./src/js/score.js");\r\nconst Wave = __webpack_require__(/*! ./wave */ "./src/js/wave.js");\r\n\r\nvar aneOb;\r\nvar fruitOb;\r\nvar momOb;\r\nvar babyOb;\r\nvar scoreOb;\r\nvar waveOb;\r\nvar haloOb;\r\nvar dustOb;\r\nvar can1 = global.can1;\r\nvar ctx1 = global.ctx1;\r\nvar ctx2 = global.ctx2;\r\nvar canWid = global.canWid;\r\nvar canHei = global.canHei;\r\nvar calLength2 = util.calLength2;\r\n\r\nvar lastframetime;\r\n\r\nvar Controller = {};\r\nController.startgame = function(){\r\n  Controller.init();\r\n\r\n  lastframetime = Date.now();\r\n  Controller.gameLoop();\r\n\r\n};\r\n\r\nController.drawBackgorund = function() {\r\n  var img = new Image();\r\n  img.src= global.imgUrl + \'background.jpg\';\r\n  ctx2.drawImage(img,0,0,canWid,canHei);\r\n};\r\n\r\nController.init = function(){\r\n\r\n  ctx1.fillStyle = \'white\';\r\n  ctx1.font = \'20px 微软雅黑\';\r\n  ctx1.textAlign = \'center\';\r\n  can1.addEventListener(\'mousemove\', Controller.onMouseMove, false);\r\n  can1.addEventListener(\'click\', Controller.onClick, false);\r\n\r\n\r\n  global.mx = canWid * 0.5;\r\n  global.my = canHei * 0.5;\r\n\r\n  aneOb = global.aneOb = new Ane();  //new 一个海葵类\r\n  aneOb.init();  //初始化海葵的属性\r\n\r\n  fruitOb = global.fruitOb = new Fruit();\r\n  fruitOb.init();\r\n\r\n  momOb = global.momOb = new Mom();\r\n  momOb.init();\r\n\r\n  babyOb = global.babyOb = new Baby();\r\n  babyOb.init();\r\n\r\n  scoreOb = global.scoreOb = new Score();   //创建的时候已经初始化\r\n\r\n  waveOb = global.waveOb = new Wave();\r\n  waveOb.init();\r\n\r\n  haloOb = global.haloOb = new Halo();\r\n  haloOb.init();\r\n\r\n  dustOb = global.dustOb = new Dust();\r\n  dustOb.init();\r\n};\r\nController.gameLoop = function(){   //使用帧绘画，一直在画的东西\r\n  requestAnimFrame(Controller.gameLoop);\r\n  var now = Date.now();    //1970 00:00:00 到现在的毫秒数\r\n  global.diffframetime = now - lastframetime;\r\n  lastframetime = now;\r\n  if(global.diffframetime > 40){\r\n    global.diffframetime = 40;   //防止切换浏览器，differ时间变长，果实长到无限大\r\n  }\r\n\r\n  ctx2.clearRect(0, 0, canWid, canHei);    //清除画布2\r\n  Controller.drawBackgorund();\r\n  aneOb.drawAne();  // 画海葵部分\r\n  fruitOb.computeFruit();  //根据果实出现个数再出生果实\r\n  fruitOb.drawFruit();  //画果实部分\r\n\r\n  ctx1.clearRect(0, 0, canWid, canHei);    //清除画布1\r\n  momOb.drawMom();   //画鱼妈妈\r\n  babyOb.drawBaby();  //画小鱼\r\n  if(!scoreOb.gameOver){  //如果游戏没有结束\r\n    Controller.momEatFruit();  //随时判断果实是否被吃掉\r\n    Controller.momFoodBaby();  //判断大鱼喂小鱼\r\n  }\r\n  scoreOb.drawScore();\r\n\r\n  waveOb.drawWave();\r\n  haloOb.drawHalo();\r\n  dustOb.drawDust();\r\n};\r\nController.onMouseMove = function(e){     //鼠标移动事件，layerX是FF浏览器特有的。\r\n  if(!scoreOb.gameOver){  //如果游戏没有结束\r\n    if(e.offsetX || e.layerX){\r\n      global.mx = e.offsetX == undefined ? e.layerX : e.offsetX;\r\n      global.my = e.offsetY == undefined ? e.layerY : e.offsetY;\r\n    }\r\n  }\r\n};\r\nController.onClick = function(){\r\n  if(scoreOb.gameOver){   //如果游戏为结束状态\r\n    scoreOb.gameOver = false;\r\n    // aneOb.init();\r\n    fruitOb.init();\r\n    momOb.init();\r\n    babyOb.init();\r\n    scoreOb.init();\r\n  }\r\n};\r\nController.momEatFruit = function(){     //判断果实和大鱼之间的距离，小于30说明被吃掉\r\n  for(var i = 0;i < fruitOb.num; i++ ){\r\n    if(fruitOb.alive[i] && fruitOb.grow[i]){\r\n      var len = calLength2(fruitOb.x[i], fruitOb.y[i], momOb.x, momOb.y);\r\n      if(len < 30){\r\n        fruitOb.dead(i);    //如果距离小于30，则被吃掉\r\n        waveOb.born(i);     //吃掉的时候，产生圆圈\r\n        scoreOb.fruitNum ++;\r\n        momOb.momBodyIndex = momOb.momBodyIndex == 7 ? momOb.momBodyIndex : (momOb.momBodyIndex + 1);\r\n        if(fruitOb.type[i] == \'blue\'){\r\n          scoreOb.doubleNum ++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\nController.momFoodBaby = function(){    //判断大鱼和小鱼之间的距离，小于30，小鱼的颜色变深\r\n  if(scoreOb.fruitNum > 0){\r\n    var len = calLength2(momOb.x, momOb.y, babyOb.x, babyOb.y);\r\n    if(len < 30){   //距离小于30，而且大鱼吃到了果实，才能喂小鱼\r\n      haloOb.born();\r\n      momOb.momBodyIndex = 0;     //大鱼体力变0\r\n      var num = scoreOb.doubleNum * scoreOb.fruitNum;\r\n      var index = babyOb.babyBodyIndex - num;\r\n      if(index < 0){\r\n        index = 0;  //如果下标小于0， 则等于0\r\n      }\r\n\r\n      var strength = scoreOb.strength + (index/2).toFixed(0);\r\n      if(strength > 10){\r\n        strength = 10;\r\n      }\r\n      scoreOb.strength = strength;\r\n      babyOb.babyBodyIndex = index;  //小鱼身体图片下标减小，身体变红\r\n      scoreOb.computeScore();   //计算总分,\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = Controller;\r\n\r\n\n\n//# sourceURL=webpack:///./src/js/controller.js?')},"./src/js/dust.js":
/*!************************!*\
  !*** ./src/js/dust.js ***!
  \************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("// 灰尘类\r\n\r\n// 依赖 global\r\nconst global = __webpack_require__(/*! ./global */ \"./src/js/global.js\");\r\n\r\nvar ctx1 = global.ctx1;\r\nvar imgUrl = global.imgUrl;\r\nvar canWid = global.canWid;\r\nvar canHei = global.canHei;\r\n\r\nvar Dust = function(){\r\n  this.num = 30;\r\n  this.dustPic = [];\r\n  this.x = [];\r\n  this.y = [];\r\n  this.amp = [];\r\n  this.index = [];\r\n  this.beta = 0;\r\n};\r\nDust.prototype.init = function(){\r\n  for(var i =0; i< 7; i++){\r\n    this.dustPic[i] = new Image();\r\n    this.dustPic[i].src = imgUrl + 'dust'+ i +'.png';\r\n  }\r\n  for(var i = 0;i< this.num; i++){\r\n    this.x[i] = Math.random() * canWid;\r\n    this.y[i] = Math.random() * canHei;\r\n    this.amp = 20 + Math.random() + 15;\r\n    this.index[i] = Math.floor(Math.random() * 7);\r\n\r\n  }\r\n};\r\nDust.prototype.drawDust = function(){\r\n  // console.log(this.dustPic[0]);\r\n  for(var i = 0;i< this.num; i++){\r\n    var index = this.index[i];\r\n    ctx1.drawImage(this.dustPic[index], this.x, this.y);\r\n  }\r\n};\r\n\r\nmodule.exports = Dust ;\n\n//# sourceURL=webpack:///./src/js/dust.js?")},"./src/js/fruit.js":
/*!*************************!*\
  !*** ./src/js/fruit.js ***!
  \*************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('// 果实类\r\n\r\n// 依赖 global\r\nconst global = __webpack_require__(/*! ./global */ "./src/js/global.js");\r\n\r\nvar ctx2 = global.ctx2;\r\nvar imgUrl = global.imgUrl;\r\n\r\nvar Fruit = function(){\r\n  this.num = 30;\r\n  this.x = [];\r\n  this.y = [];\r\n  this.size = [];   //果实大小（直径）\r\n  this.type = [];   //果实的类型\r\n  this.speed = [];  //果实漂浮速度\r\n  this.grow = [];   //果实是否长大\r\n  this.alive = [];  //bool，是否活着\r\n  this.orange = new Image();\r\n  this.blue = new Image();\r\n};\r\nFruit.prototype.init = function(){\r\n  this.orange.src = imgUrl + \'fruit.png\';\r\n  this.blue.src = imgUrl + \'blue.png\';\r\n  for(var i = 0; i< this.num; i++){\r\n    this.x[i] = this.y[i] = 0;\r\n    this.speed[i] = Math.random() * 0.015 + 0.005;   //[0.005  ,  0.02)\r\n    this.alive[i] = false;   //初始值都为false\r\n    this.grow[i] = false;   //初始为“未长大”;\r\n    this.type[i]  = "";\r\n  }\r\n};\r\nFruit.prototype.drawFruit = function(){\r\n  for(var i =0;i< this.num; i++){\r\n    if(this.alive[i]){\r\n      //find an ane, grow, fly up...\r\n      if(this.size[i] <= 16){   //长大状态\r\n        this.grow[i] = false;\r\n        this.size[i] += this.speed[i] * global.diffframetime * 0.8;\r\n      }else{   //已经长大,向上漂浮\r\n        this.grow[i] = true;\r\n        this.y[i] -= this.speed[i] * 5 * global.diffframetime;\r\n      }\r\n      var pic = this.orange;\r\n      if(this.type[i] == \'blue\')   pic = this.blue;\r\n\r\n      ctx2.drawImage(pic, this.x[i] - this.size[i] * 0.5, this.y[i] - this.size[i] * 0.5, this.size[i], this.size[i]);\r\n      if(this.y[i] < 8){\r\n        this.alive[i] = false;\r\n      }\r\n    }\r\n  }\r\n};\r\nFruit.prototype.born = function(i){\r\n  var aneOb = global.aneOb;\r\n  var aneId = Math.floor(Math.random() * aneOb.num);\r\n  this.x[i] = aneOb.headx[aneId];    //果实的横坐标\r\n  this.y[i] = aneOb.heady[aneId];    // 果实的总坐标\r\n  this.size[i] = 0;\r\n  this.alive[i] = true;\r\n  var flag = Math.random();\r\n  if(flag < 0.1){\r\n    this.type[i] = "blue";\r\n  }else{\r\n    this.type[i] = "orange";\r\n  }\r\n};\r\nFruit.prototype.dead = function(i){\r\n  this.alive[i] = false;\r\n};\r\nFruit.prototype.computeFruit = function() {           //计算屏幕上的果实数量\r\n  var fruitOb = global.fruitOb;\r\n  var count = 0;\r\n  for(var i = 0; i < fruitOb.num; i++){\r\n    if(fruitOb.alive[i])  count ++;\r\n  }\r\n  if(count < 15){\r\n    bornFruit();\t\t//出生一个果实\r\n    return false;\r\n  }\r\n};\r\nfunction bornFruit() {     //循环30个果实，如果状态为false，则让它出生\r\n  var fruitOb = global.fruitOb;\r\n  for(var i = 0;i< fruitOb.num; i++){\r\n    if(!fruitOb.alive[i]){\r\n      fruitOb.born(i);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Fruit;\r\n\n\n//# sourceURL=webpack:///./src/js/fruit.js?')},"./src/js/global.js":
/*!**************************!*\
  !*** ./src/js/global.js ***!
  \**************************/
/*! no static exports found */function(module,exports){eval("// 全局变量\r\n\r\nvar can1 = document.getElementById('canvas1');\r\nvar ctx1 = can1.getContext('2d');   //上面的canvas\r\nvar can2 = document.getElementById('canvas2');\r\nvar ctx2 = can2.getContext('2d');   //下面的canvas\r\n\r\nvar global = {\r\n  imgUrl: './images/',\r\n  can1: can1,\r\n  ctx1: ctx1,\r\n  can2: can2,\r\n  ctx2: ctx2,\r\n  canWid: can1.width,\r\n  canHei: can1.height,\r\n  mx: can1.width * 0.5,\r\n  my: can1.height * 0.5,\r\n  aneOb: {},\r\n  fruitOb: {},\r\n  momOb: {},\r\n  babyOb: {},\r\n  scoreOb: {},\r\n  waveOb: {},\r\n  haloOb: {},\r\n  dustOb: {},\r\n  diffframetime: 0\r\n}\r\nmodule.exports = global;\n\n//# sourceURL=webpack:///./src/js/global.js?")},"./src/js/halo.js":
/*!************************!*\
  !*** ./src/js/halo.js ***!
  \************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('// 大鱼喂小鱼的光环类\r\n\r\n// 依赖 global\r\nconst global = __webpack_require__(/*! ./global */ "./src/js/global.js");\r\n\r\nvar ctx1 = global.ctx1;\r\nvar canWid = global.canWid;\r\nvar canHei = global.canHei;\r\n\r\nvar Halo = function(){\r\n  this.num = 5;\r\n  this.x = [];\r\n  this.y = [];\r\n  this.r = [];   //半径\r\n  this.status = [];   //当前光环的使用状态\r\n};\r\nHalo.prototype.init = function(){\r\n  for(var i = 0;i< this.num;i++){\r\n    this.x[i] = canWid * 0.5;\r\n    this.y[i] = canHei * 0.5;\r\n    this.status[i] = false;    //初始化光环未被使用\r\n    this.r[i] = 0;\r\n  }\r\n};\r\nHalo.prototype.drawHalo = function(){\r\n  ctx1.save();\r\n  ctx1.lineWidth = 4;\r\n  for(var i = 0;i< this.num; i++){\r\n    if(this.status[i]){     //如果光环是使用状态，则绘制光环\r\n      this.r[i] += global.diffframetime * 0.08;\r\n      if(this.r[i] > 100){\r\n        this.status[i] = false;\r\n        return false;\r\n      }\r\n      var alpha = 1 - this.r[i] / 100;\r\n\r\n      ctx1.strokeStyle = "rgba(203, 91, 0, "+ alpha +")";\r\n      ctx1.beginPath();\r\n      ctx1.arc(this.x[i], this.y[i], this.r[i], 0, 2 * Math.PI);   //画圆，\r\n      ctx1.stroke();\r\n    }\r\n  }\r\n  ctx1.restore();\r\n};\r\nHalo.prototype.born = function(){\r\n  var babyOb = global.babyOb;\r\n  for(var i = 0; i< this.num; i++){\r\n    if(!this.status[i]){\r\n      this.status[i] = true;   //把光环状态设为使用状态\r\n      this.x[i] = babyOb.x;   //光环的位置是小鱼的位置。\r\n      this.y[i] = babyOb.y;\r\n      this.r[i] = 10;\r\n      return false;   //找到一个未使用的光环，就结束。\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = Halo ;\n\n//# sourceURL=webpack:///./src/js/halo.js?')},"./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('// 主入口\r\n\r\n// 依赖 controller\r\nconst Controller = __webpack_require__(/*! ./controller */ "./src/js/controller.js");\r\n__webpack_require__(/*! ../css/style.css */ "./src/css/style.css");\r\n// console.log(Controller);\r\nController.startgame();\r\n\n\n//# sourceURL=webpack:///./src/js/index.js?')},"./src/js/mom.js":
/*!***********************!*\
  !*** ./src/js/mom.js ***!
  \***********************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("// 鱼妈妈类\r\n\r\n// 依赖 global, util\r\nconst global = __webpack_require__(/*! ./global */ \"./src/js/global.js\");\r\nconst util = __webpack_require__(/*! ./util */ \"./src/js/util.js\");\r\n\r\nvar ctx1 = global.ctx1;\r\nvar imgUrl = global.imgUrl;\r\nvar canWid = global.canWid;\r\nvar canHei = global.canHei;\r\nvar lerpAngle = util.lerpAngle;\r\nvar lerpDistance = util.lerpDistance;\r\n\r\nvar Mom = function(){\r\n  this.x = 0;\r\n  this.y = 0;\r\n  this.angle;     //大鱼的角度\r\n  this.momTailArr = [];\r\n  this.momTailTimer = 0;\r\n  this.momTailIndex = 0;\r\n\r\n  this.momEyeArr =[];\r\n  this.momEyeTimer = 0;\r\n  this.momEyeIndex = 0;\r\n  this.momEyeInterval = 1000;\r\n\r\n  this.momOrangeArr = [];   //大鱼的橙色身体数组\r\n  this.momBlueArr = [];     //蓝色身体数组\r\n  this.momBodyIndex = 0;\r\n};\r\nMom.prototype.init = function(){\r\n  this.x = canWid * 0.5;\r\n  this.y = canHei * 0.5;\r\n  this.angle = 0;\r\n\r\n  for(var i = 0;i< 8; i++){   //大鱼尾巴\r\n    this.momTailArr[i] = new Image();\r\n    this.momTailArr[i].src = imgUrl + 'bigTail'+ i +'.png';\r\n  }\r\n  for(var i = 0;i< 2; i++){   //大鱼眼睛\r\n    this.momEyeArr[i] = new Image();\r\n    this.momEyeArr[i].src = imgUrl + 'bigEye'+ i +'.png';\r\n  }\r\n  for(var i = 0;i< 8; i++){\r\n    this.momOrangeArr[i] = new Image();         //大鱼橙色身体\r\n    this.momOrangeArr[i].src = imgUrl + 'bigSwim'+ i +'.png';\r\n    this.momBlueArr[i] = new Image();           //大鱼蓝色身体\r\n    this.momBlueArr[i].src = imgUrl + 'bigSwimBlue'+ i +'.png';\r\n  }\r\n};\r\nMom.prototype.drawMom = function(){\r\n  var scoreOb = global.scoreOb;\r\n  //lerp x,y   让大鱼的坐标值倾向于鼠标位置，然后绘制大鱼\r\n  this.x = lerpDistance(global.mx, this.x, 0.96);\r\n  this.y = lerpDistance(global.my, this.y, 0.98);\r\n\r\n  //lerp angle    让大鱼的角度倾向于鼠标的角度\r\n  var deltaX = global.mx - this.x;  //横坐标差\r\n  var deltaY = global.my - this.y;  //纵坐标差\r\n  var beta = Math.atan2(deltaY, deltaX) + Math.PI;    //目标角度\r\n  this.angle = lerpAngle(beta, this.angle, 0.6);    //获得每一次旋转的角度\r\n\r\n  this.momTailTimer += global.diffframetime;\r\n  if(this.momTailTimer > 50){\r\n    this.momTailIndex = (this.momTailIndex + 1) % 8;\r\n    this.momTailTimer %= 50;\r\n  }\r\n\r\n  this.momEyeTimer += global.diffframetime;\r\n  if(this.momEyeTimer > this.momEyeInterval){\r\n    this.momEyeIndex = (this.momEyeIndex + 1) % 2;\r\n    this.momEyeTimer %= this.momEyeInterval;\r\n\r\n    if(this.momEyeIndex == 0){\r\n      this.momEyeInterval = Math.random() * 1500 + 1500;\r\n    }else{\r\n      this.momEyeInterval = 200;\r\n    }\r\n  }\r\n\r\n  ctx1.save();     //保存之前的画布\r\n  ctx1.translate(this.x, this.y);      //把原点变成(this.x , this.y);\r\n  ctx1.rotate(this.angle);\r\n\r\n  var momTailImage = this.momTailArr[this.momTailIndex];\r\n  ctx1.drawImage(momTailImage, -momTailImage.width * 0.5 + 30, -momTailImage.height * 0.5);\r\n\r\n  var momBodyImage;\r\n  if(scoreOb.doubleNum != 1){   //说明大鱼吃到了蓝色果实，身体变蓝色\r\n    momBodyImage = this.momBlueArr[this.momBodyIndex];\r\n  }else{\r\n    momBodyImage = this.momOrangeArr[this.momBodyIndex];\r\n  }\r\n  ctx1.drawImage(momBodyImage, -momBodyImage.width * 0.5, -momBodyImage.height * 0.5);\r\n\r\n  var momEyeImage = this.momEyeArr[this.momEyeIndex];\r\n  ctx1.drawImage(momEyeImage, -momEyeImage.width * 0.5, -momEyeImage.height * 0.5);\r\n  ctx1.restore();   //操作完后返回到之前的画布\r\n};\r\n\r\nmodule.exports = Mom;\n\n//# sourceURL=webpack:///./src/js/mom.js?")},"./src/js/score.js":
/*!*************************!*\
  !*** ./src/js/score.js ***!
  \*************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('// 数据类\r\n\r\n// 依赖 global\r\nconst global = __webpack_require__(/*! ./global */ "./src/js/global.js");\r\n\r\nvar ctx1 = global.ctx1;\r\nvar canWid = global.canWid;\r\nvar canHei = global.canHei;\r\n\r\nvar Score = function(){\r\n  this.fruitNum = 0;       //大鱼吃到的果实数量\r\n  this.doubleNum = 1;       //计算分数的倍数\r\n  this.score = 0;\r\n  this.strength = 10;\r\n  this.alpha = 0;\r\n  this.gameOver = false;\r\n};\r\nScore.prototype.init = function(){\r\n  this.fruitNum = 0;       //大鱼吃到的果实数量\r\n  this.doubleNum = 1;       //计算分数的倍数\r\n  this.score = 0;\r\n};\r\nScore.prototype.drawScore = function(){\r\n  var scoreOb = global.scoreOb;\r\n  ctx1.fillText("num: " + this.fruitNum, canWid * 0.5, canHei-30);\r\n  ctx1.fillText("double: " + this.doubleNum, canWid * 0.5, canHei-70);\r\n\r\n  ctx1.save();\r\n  ctx1.font = \'30px verdana\';\r\n  ctx1.fillText("SCORE: " + this.score, canWid * 0.5, 50);\r\n  ctx1.font = \'20px verdana\';\r\n  ctx1.fillText("strength: ", 650, 45);\r\n  if(scoreOb.strength <= 3){\r\n    ctx1.fillStyle = "red";\r\n  }\r\n  ctx1.fillText(scoreOb.strength, 710, 45);\r\n\r\n  if(scoreOb.gameOver){\r\n    this.alpha += global.diffframetime * 0.0005;\r\n    if(this.alpha > 1){\r\n      this.alpha = 1;\r\n    }\r\n    ctx1.font = \'40px verdana\';\r\n    ctx1.shadowBlur = 10;\r\n    ctx1.shadowColor = "white";\r\n    ctx1.fillStyle = "rgba(255, 255, 255, "+ this.alpha +")";\r\n    ctx1.fillText("GAME OVER", canWid * 0.5, canHei * 0.5 - 25);\r\n    ctx1.save();\r\n    ctx1.font = \'25px verdana\';\r\n    ctx1.fillText("CLICK TO RESTART", canWid * 0.5, canHei * 0.5 + 25);\r\n    ctx1.restore();\r\n  }\r\n  ctx1.restore();\r\n};\r\nScore.prototype.computeScore = function(){\r\n  var scoreOb = global.scoreOb;\r\n  scoreOb.score += scoreOb.fruitNum * scoreOb.doubleNum;\r\n  this.fruitNum = 0;\r\n  this.doubleNum = 1;\r\n};\r\n\r\nmodule.exports = Score;\n\n//# sourceURL=webpack:///./src/js/score.js?')},"./src/js/util.js":
/*!************************!*\
  !*** ./src/js/util.js ***!
  \************************/
/*! no static exports found */function(module,exports){eval("// 工具函数\r\n\r\nwindow.requestAnimFrame = (function() {\r\n\treturn window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\r\n\t\tfunction( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {\r\n\t\t\treturn window.setTimeout(callback, 1000 / 60);\r\n\t\t};\r\n})();\r\n\r\n\r\nfunction calLength2(x1, y1, x2, y2) {    //计算两个点之间的距离，，， 先求平方和，再开平方\r\n\treturn Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n}\r\n\r\n\r\nfunction lerpAngle(a, b, t) {     //每一次旋转的角度\r\n\tvar d = b - a;\r\n\tif (d > Math.PI) d = d - 2 * Math.PI;\r\n\tif (d < -Math.PI) d = d + 2 * Math.PI;\r\n\treturn a + d * t;\r\n}\r\n\r\nfunction lerpDistance(aim, cur, ratio) {   //aim：目标   cur：当前   ratio：百分比     每一次趋近的距离\r\n\tvar delta = cur - aim;\r\n\treturn aim + delta * ratio;\r\n}\r\n\r\nfunction distance(x1, y1, x2, y2, l) {\r\n\tvar x = Math.abs(x1 - x2);\r\n\tvar y = Math.abs(y1 - y2);\r\n\tif (x < l && y < l) {\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nvar util = {\r\n  calLength2: calLength2,\r\n  lerpAngle: lerpAngle,\r\n  lerpDistance: lerpDistance,\r\n  distance: distance,\r\n}\r\n\r\n// 暴露 util\r\nmodule.exports=util;\n\n//# sourceURL=webpack:///./src/js/util.js?")},"./src/js/wave.js":
/*!************************!*\
  !*** ./src/js/wave.js ***!
  \************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('// 大鱼吃果实波浪类\r\n\r\n// 依赖 global\r\nconst global = __webpack_require__(/*! ./global */ "./src/js/global.js");\r\nvar ctx1 = global.ctx1;\r\nvar canWid = global.canWid;\r\nvar canHei = global.canHei;\r\n\r\nvar Wave = function(){\r\n  this.num = 10;\r\n  this.x = [];\r\n  this.y = [];\r\n  this.r = [];   //半径\r\n  this.status = [];   //当前圆圈的使用状态\r\n};\r\nWave.prototype.init = function(){\r\n  for(var i = 0;i< this.num;i++){\r\n    this.x[i] = canWid * 0.5;\r\n    this.y[i] = canHei * 0.5;\r\n    this.status[i] = false;    //初始化圆圈未被使用\r\n    this.r[i] = 0;\r\n  }\r\n};\r\nWave.prototype.drawWave = function(){    //绘制一个圆圈\r\n  ctx1.save();\r\n  ctx1.lineWidth = 3;\r\n  for(var i = 0;i< this.num; i++){\r\n    if(this.status[i]){     //如果圆圈是使用状态，则绘制圆圈\r\n      this.r[i] += global.diffframetime * 0.04;\r\n      if(this.r[i] > 60){\r\n        this.status[i] = false;\r\n        return false;\r\n      }\r\n      var alpha = 1 - this.r[i] / 60;\r\n\r\n      ctx1.strokeStyle = "rgba(255, 255, 255, "+ alpha +")";\r\n      ctx1.beginPath();\r\n      ctx1.arc(this.x[i], this.y[i], this.r[i], 0, 2 * Math.PI);   //画圆，\r\n      ctx1.stroke();\r\n    }\r\n  }\r\n  ctx1.restore();\r\n};\r\nWave.prototype.born = function(index){     //出生一个圆圈。\r\n  var fruitOb = global.fruitOb;\r\n  for(var i = 0; i< this.num; i++){\r\n    if(!this.status[i]){\r\n      this.status[i] = true;   //把圆圈状态设为使用状态\r\n      this.x[i] = fruitOb.x[index];\r\n      this.y[i] = fruitOb.y[index];\r\n      this.r[i] = 10;\r\n      return false;   //找到一个未使用的圆圈，就结束。\r\n    }\r\n  }\r\n};\r\nmodule.exports = Wave;\n\n//# sourceURL=webpack:///./src/js/wave.js?')}});